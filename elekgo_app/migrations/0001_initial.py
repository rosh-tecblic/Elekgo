# Generated by Django 4.1.2 on 2022-11-29 06:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('user_name', models.CharField(max_length=200)),
                ('password', models.CharField(max_length=200)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('otp', models.IntegerField(blank=True, null=True)),
                ('fcm_token', models.CharField(max_length=500, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_user_kyc_verified', models.CharField(choices=[('NA', 'NA'), ('Approved', 'Approved'), ('Pending', 'Pending'), ('Rejected', 'Rejected')], default='NA', max_length=20)),
                ('user_image', models.ImageField(blank=True, null=True, upload_to='static/images')),
                ('user_aadhar_image', models.ImageField(blank=True, null=True, upload_to='static/images', verbose_name='Aadhar Front Image')),
                ('user_aadhar_image_back', models.ImageField(blank=True, null=True, upload_to='static/images', verbose_name='Aadhar Back Image')),
                ('user_aadhar_identification_num', models.IntegerField(blank=True, null=True, unique=True)),
                ('user_role', models.PositiveSmallIntegerField(choices=[(1, 'admin'), (2, 'staff_user'), (3, 'customer_support'), (4, 'maintenance_user'), (5, 'normal_user')], default=5)),
                ('bolt_id', models.CharField(blank=True, max_length=100, null=True)),
                ('bolt_token', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FrequentlyAskedQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('answer', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_title', models.CharField(max_length=100)),
                ('notification_description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(max_length=100)),
                ('order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_signature', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField(auto_now_add=True)),
                ('payment_note', models.CharField(max_length=100)),
                ('payment_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RideTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ride_date', models.DateField(auto_now=True)),
                ('start_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('pause_time', models.TimeField(null=True)),
                ('resume_time', models.TimeField(null=True)),
                ('total_running_time', models.CharField(max_length=200, null=True)),
                ('total_pause_time', models.CharField(max_length=200, null=True)),
                ('is_ride_running', models.BooleanField(default=False)),
                ('is_ride_end', models.BooleanField(default=False)),
                ('is_paused', models.BooleanField(default=False)),
                ('start_location', models.CharField(blank=True, max_length=500, null=True)),
                ('end_location', models.CharField(blank=True, max_length=500, null=True)),
                ('payment_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='elekgo_app.paymentmodel')),
                ('riding_user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleReportModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_vehicle_image', models.ImageField(blank=True, null=True, upload_to='static/repoted_vehicle_images')),
                ('remark', models.CharField(blank=True, max_length=400, null=True)),
                ('report_status', models.CharField(choices=[('pending', 'Pending'), ('in progress', 'In Progress'), ('Resolved', 'Resolved')], default='Pending', max_length=20)),
                ('reported_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_unique_identifier', models.CharField(max_length=100, null=True, unique=True, verbose_name='Scooter Chassis Number/VIN Number')),
                ('qr_image', models.ImageField(blank=True, null=True, upload_to='static/QRCode')),
                ('battery_percentage', models.IntegerField(null=True)),
                ('iot_device_number', models.CharField(max_length=100, null=True)),
                ('scooter_number', models.CharField(max_length=100, null=True)),
                ('battery_number', models.CharField(max_length=100, null=True)),
                ('is_reserved', models.BooleanField(default=False, null=True)),
                ('is_under_maintenance', models.BooleanField(default=False, null=True)),
                ('number_of_km_used', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_time_battery_used', models.IntegerField(blank=True, null=True)),
                ('no_of_person_used', models.IntegerField(blank=True, null=True)),
                ('no_of_hours_used', models.CharField(blank=True, max_length=50, null=True)),
                ('is_booked', models.BooleanField(blank=True, default=False, null=True)),
                ('current_location', models.CharField(blank=True, max_length=500, null=True)),
                ('total_km_capacity', models.CharField(default='25/Km', max_length=20)),
                ('per_min_charge', models.CharField(default='2.5 Rs', max_length=10, verbose_name='Per Minute Running Charge')),
                ('per_pause_charge', models.CharField(default='0.5 Rs', max_length=10, verbose_name='Per Minute Pause Charge')),
                ('is_unlocked', models.BooleanField(default=False)),
                ('booked_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booked_Vehicle_User', to=settings.AUTH_USER_MODEL)),
                ('reserverd_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reserved_Vehicle_User', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPaymentAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('account_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RideTimeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pause_time', models.TimeField(null=True)),
                ('resume_time', models.TimeField(null=True)),
                ('total_pause_resume_time', models.CharField(max_length=200, null=True)),
                ('ride_table_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elekgo_app.ridetable')),
            ],
        ),
        migrations.AddField(
            model_name='ridetable',
            name='vehicle_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='elekgo_app.vehicle'),
        ),
        migrations.CreateModel(
            name='CustomerSatisfaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255, verbose_name='User Email')),
                ('user_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('user_is_satisfied', models.BooleanField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
